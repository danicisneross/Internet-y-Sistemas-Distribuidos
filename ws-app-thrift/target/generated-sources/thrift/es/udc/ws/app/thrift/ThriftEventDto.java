/**
 * Autogenerated by Thrift Compiler (0.16.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package es.udc.ws.app.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.16.0)", date = "2023-01-29")
public class ThriftEventDto implements org.apache.thrift.TBase<ThriftEventDto, ThriftEventDto._Fields>, java.io.Serializable, Cloneable, Comparable<ThriftEventDto> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ThriftEventDto");

  private static final org.apache.thrift.protocol.TField EVENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("eventId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField START_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("startDate", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField DURATION_FIELD_DESC = new org.apache.thrift.protocol.TField("duration", org.apache.thrift.protocol.TType.DOUBLE, (short)5);
  private static final org.apache.thrift.protocol.TField CANCELATION_FIELD_DESC = new org.apache.thrift.protocol.TField("cancelation", org.apache.thrift.protocol.TType.BOOL, (short)6);
  private static final org.apache.thrift.protocol.TField NUMBER_ASSISTANCE_FIELD_DESC = new org.apache.thrift.protocol.TField("numberAssistance", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField NUMBER_TOTAL_RESPONSES_FIELD_DESC = new org.apache.thrift.protocol.TField("numberTotalResponses", org.apache.thrift.protocol.TType.I32, (short)8);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ThriftEventDtoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ThriftEventDtoTupleSchemeFactory();

  public long eventId; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String name; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String description; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String startDate; // required
  public double duration; // required
  public boolean cancelation; // required
  public int numberAssistance; // required
  public int numberTotalResponses; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    EVENT_ID((short)1, "eventId"),
    NAME((short)2, "name"),
    DESCRIPTION((short)3, "description"),
    START_DATE((short)4, "startDate"),
    DURATION((short)5, "duration"),
    CANCELATION((short)6, "cancelation"),
    NUMBER_ASSISTANCE((short)7, "numberAssistance"),
    NUMBER_TOTAL_RESPONSES((short)8, "numberTotalResponses");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // EVENT_ID
          return EVENT_ID;
        case 2: // NAME
          return NAME;
        case 3: // DESCRIPTION
          return DESCRIPTION;
        case 4: // START_DATE
          return START_DATE;
        case 5: // DURATION
          return DURATION;
        case 6: // CANCELATION
          return CANCELATION;
        case 7: // NUMBER_ASSISTANCE
          return NUMBER_ASSISTANCE;
        case 8: // NUMBER_TOTAL_RESPONSES
          return NUMBER_TOTAL_RESPONSES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __EVENTID_ISSET_ID = 0;
  private static final int __DURATION_ISSET_ID = 1;
  private static final int __CANCELATION_ISSET_ID = 2;
  private static final int __NUMBERASSISTANCE_ISSET_ID = 3;
  private static final int __NUMBERTOTALRESPONSES_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.EVENT_ID, new org.apache.thrift.meta_data.FieldMetaData("eventId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.START_DATE, new org.apache.thrift.meta_data.FieldMetaData("startDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DURATION, new org.apache.thrift.meta_data.FieldMetaData("duration", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.CANCELATION, new org.apache.thrift.meta_data.FieldMetaData("cancelation", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.NUMBER_ASSISTANCE, new org.apache.thrift.meta_data.FieldMetaData("numberAssistance", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER_TOTAL_RESPONSES, new org.apache.thrift.meta_data.FieldMetaData("numberTotalResponses", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ThriftEventDto.class, metaDataMap);
  }

  public ThriftEventDto() {
  }

  public ThriftEventDto(
    long eventId,
    java.lang.String name,
    java.lang.String description,
    java.lang.String startDate,
    double duration,
    boolean cancelation,
    int numberAssistance,
    int numberTotalResponses)
  {
    this();
    this.eventId = eventId;
    setEventIdIsSet(true);
    this.name = name;
    this.description = description;
    this.startDate = startDate;
    this.duration = duration;
    setDurationIsSet(true);
    this.cancelation = cancelation;
    setCancelationIsSet(true);
    this.numberAssistance = numberAssistance;
    setNumberAssistanceIsSet(true);
    this.numberTotalResponses = numberTotalResponses;
    setNumberTotalResponsesIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ThriftEventDto(ThriftEventDto other) {
    __isset_bitfield = other.__isset_bitfield;
    this.eventId = other.eventId;
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetDescription()) {
      this.description = other.description;
    }
    if (other.isSetStartDate()) {
      this.startDate = other.startDate;
    }
    this.duration = other.duration;
    this.cancelation = other.cancelation;
    this.numberAssistance = other.numberAssistance;
    this.numberTotalResponses = other.numberTotalResponses;
  }

  public ThriftEventDto deepCopy() {
    return new ThriftEventDto(this);
  }

  @Override
  public void clear() {
    setEventIdIsSet(false);
    this.eventId = 0;
    this.name = null;
    this.description = null;
    this.startDate = null;
    setDurationIsSet(false);
    this.duration = 0.0;
    setCancelationIsSet(false);
    this.cancelation = false;
    setNumberAssistanceIsSet(false);
    this.numberAssistance = 0;
    setNumberTotalResponsesIsSet(false);
    this.numberTotalResponses = 0;
  }

  public long getEventId() {
    return this.eventId;
  }

  public ThriftEventDto setEventId(long eventId) {
    this.eventId = eventId;
    setEventIdIsSet(true);
    return this;
  }

  public void unsetEventId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EVENTID_ISSET_ID);
  }

  /** Returns true if field eventId is set (has been assigned a value) and false otherwise */
  public boolean isSetEventId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EVENTID_ISSET_ID);
  }

  public void setEventIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EVENTID_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getName() {
    return this.name;
  }

  public ThriftEventDto setName(@org.apache.thrift.annotation.Nullable java.lang.String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getDescription() {
    return this.description;
  }

  public ThriftEventDto setDescription(@org.apache.thrift.annotation.Nullable java.lang.String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getStartDate() {
    return this.startDate;
  }

  public ThriftEventDto setStartDate(@org.apache.thrift.annotation.Nullable java.lang.String startDate) {
    this.startDate = startDate;
    return this;
  }

  public void unsetStartDate() {
    this.startDate = null;
  }

  /** Returns true if field startDate is set (has been assigned a value) and false otherwise */
  public boolean isSetStartDate() {
    return this.startDate != null;
  }

  public void setStartDateIsSet(boolean value) {
    if (!value) {
      this.startDate = null;
    }
  }

  public double getDuration() {
    return this.duration;
  }

  public ThriftEventDto setDuration(double duration) {
    this.duration = duration;
    setDurationIsSet(true);
    return this;
  }

  public void unsetDuration() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DURATION_ISSET_ID);
  }

  /** Returns true if field duration is set (has been assigned a value) and false otherwise */
  public boolean isSetDuration() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DURATION_ISSET_ID);
  }

  public void setDurationIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DURATION_ISSET_ID, value);
  }

  public boolean isCancelation() {
    return this.cancelation;
  }

  public ThriftEventDto setCancelation(boolean cancelation) {
    this.cancelation = cancelation;
    setCancelationIsSet(true);
    return this;
  }

  public void unsetCancelation() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CANCELATION_ISSET_ID);
  }

  /** Returns true if field cancelation is set (has been assigned a value) and false otherwise */
  public boolean isSetCancelation() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CANCELATION_ISSET_ID);
  }

  public void setCancelationIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CANCELATION_ISSET_ID, value);
  }

  public int getNumberAssistance() {
    return this.numberAssistance;
  }

  public ThriftEventDto setNumberAssistance(int numberAssistance) {
    this.numberAssistance = numberAssistance;
    setNumberAssistanceIsSet(true);
    return this;
  }

  public void unsetNumberAssistance() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NUMBERASSISTANCE_ISSET_ID);
  }

  /** Returns true if field numberAssistance is set (has been assigned a value) and false otherwise */
  public boolean isSetNumberAssistance() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NUMBERASSISTANCE_ISSET_ID);
  }

  public void setNumberAssistanceIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NUMBERASSISTANCE_ISSET_ID, value);
  }

  public int getNumberTotalResponses() {
    return this.numberTotalResponses;
  }

  public ThriftEventDto setNumberTotalResponses(int numberTotalResponses) {
    this.numberTotalResponses = numberTotalResponses;
    setNumberTotalResponsesIsSet(true);
    return this;
  }

  public void unsetNumberTotalResponses() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NUMBERTOTALRESPONSES_ISSET_ID);
  }

  /** Returns true if field numberTotalResponses is set (has been assigned a value) and false otherwise */
  public boolean isSetNumberTotalResponses() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NUMBERTOTALRESPONSES_ISSET_ID);
  }

  public void setNumberTotalResponsesIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NUMBERTOTALRESPONSES_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case EVENT_ID:
      if (value == null) {
        unsetEventId();
      } else {
        setEventId((java.lang.Long)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((java.lang.String)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((java.lang.String)value);
      }
      break;

    case START_DATE:
      if (value == null) {
        unsetStartDate();
      } else {
        setStartDate((java.lang.String)value);
      }
      break;

    case DURATION:
      if (value == null) {
        unsetDuration();
      } else {
        setDuration((java.lang.Double)value);
      }
      break;

    case CANCELATION:
      if (value == null) {
        unsetCancelation();
      } else {
        setCancelation((java.lang.Boolean)value);
      }
      break;

    case NUMBER_ASSISTANCE:
      if (value == null) {
        unsetNumberAssistance();
      } else {
        setNumberAssistance((java.lang.Integer)value);
      }
      break;

    case NUMBER_TOTAL_RESPONSES:
      if (value == null) {
        unsetNumberTotalResponses();
      } else {
        setNumberTotalResponses((java.lang.Integer)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case EVENT_ID:
      return getEventId();

    case NAME:
      return getName();

    case DESCRIPTION:
      return getDescription();

    case START_DATE:
      return getStartDate();

    case DURATION:
      return getDuration();

    case CANCELATION:
      return isCancelation();

    case NUMBER_ASSISTANCE:
      return getNumberAssistance();

    case NUMBER_TOTAL_RESPONSES:
      return getNumberTotalResponses();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case EVENT_ID:
      return isSetEventId();
    case NAME:
      return isSetName();
    case DESCRIPTION:
      return isSetDescription();
    case START_DATE:
      return isSetStartDate();
    case DURATION:
      return isSetDuration();
    case CANCELATION:
      return isSetCancelation();
    case NUMBER_ASSISTANCE:
      return isSetNumberAssistance();
    case NUMBER_TOTAL_RESPONSES:
      return isSetNumberTotalResponses();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof ThriftEventDto)
      return this.equals((ThriftEventDto)that);
    return false;
  }

  public boolean equals(ThriftEventDto that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_eventId = true;
    boolean that_present_eventId = true;
    if (this_present_eventId || that_present_eventId) {
      if (!(this_present_eventId && that_present_eventId))
        return false;
      if (this.eventId != that.eventId)
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    boolean this_present_startDate = true && this.isSetStartDate();
    boolean that_present_startDate = true && that.isSetStartDate();
    if (this_present_startDate || that_present_startDate) {
      if (!(this_present_startDate && that_present_startDate))
        return false;
      if (!this.startDate.equals(that.startDate))
        return false;
    }

    boolean this_present_duration = true;
    boolean that_present_duration = true;
    if (this_present_duration || that_present_duration) {
      if (!(this_present_duration && that_present_duration))
        return false;
      if (this.duration != that.duration)
        return false;
    }

    boolean this_present_cancelation = true;
    boolean that_present_cancelation = true;
    if (this_present_cancelation || that_present_cancelation) {
      if (!(this_present_cancelation && that_present_cancelation))
        return false;
      if (this.cancelation != that.cancelation)
        return false;
    }

    boolean this_present_numberAssistance = true;
    boolean that_present_numberAssistance = true;
    if (this_present_numberAssistance || that_present_numberAssistance) {
      if (!(this_present_numberAssistance && that_present_numberAssistance))
        return false;
      if (this.numberAssistance != that.numberAssistance)
        return false;
    }

    boolean this_present_numberTotalResponses = true;
    boolean that_present_numberTotalResponses = true;
    if (this_present_numberTotalResponses || that_present_numberTotalResponses) {
      if (!(this_present_numberTotalResponses && that_present_numberTotalResponses))
        return false;
      if (this.numberTotalResponses != that.numberTotalResponses)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(eventId);

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + name.hashCode();

    hashCode = hashCode * 8191 + ((isSetDescription()) ? 131071 : 524287);
    if (isSetDescription())
      hashCode = hashCode * 8191 + description.hashCode();

    hashCode = hashCode * 8191 + ((isSetStartDate()) ? 131071 : 524287);
    if (isSetStartDate())
      hashCode = hashCode * 8191 + startDate.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(duration);

    hashCode = hashCode * 8191 + ((cancelation) ? 131071 : 524287);

    hashCode = hashCode * 8191 + numberAssistance;

    hashCode = hashCode * 8191 + numberTotalResponses;

    return hashCode;
  }

  @Override
  public int compareTo(ThriftEventDto other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetEventId(), other.isSetEventId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEventId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.eventId, other.eventId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetName(), other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDescription(), other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, other.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetStartDate(), other.isSetStartDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startDate, other.startDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDuration(), other.isSetDuration());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDuration()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.duration, other.duration);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetCancelation(), other.isSetCancelation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCancelation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cancelation, other.cancelation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumberAssistance(), other.isSetNumberAssistance());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumberAssistance()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numberAssistance, other.numberAssistance);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumberTotalResponses(), other.isSetNumberTotalResponses());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumberTotalResponses()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numberTotalResponses, other.numberTotalResponses);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("ThriftEventDto(");
    boolean first = true;

    sb.append("eventId:");
    sb.append(this.eventId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("description:");
    if (this.description == null) {
      sb.append("null");
    } else {
      sb.append(this.description);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("startDate:");
    if (this.startDate == null) {
      sb.append("null");
    } else {
      sb.append(this.startDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("duration:");
    sb.append(this.duration);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cancelation:");
    sb.append(this.cancelation);
    first = false;
    if (!first) sb.append(", ");
    sb.append("numberAssistance:");
    sb.append(this.numberAssistance);
    first = false;
    if (!first) sb.append(", ");
    sb.append("numberTotalResponses:");
    sb.append(this.numberTotalResponses);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ThriftEventDtoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ThriftEventDtoStandardScheme getScheme() {
      return new ThriftEventDtoStandardScheme();
    }
  }

  private static class ThriftEventDtoStandardScheme extends org.apache.thrift.scheme.StandardScheme<ThriftEventDto> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ThriftEventDto struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // EVENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.eventId = iprot.readI64();
              struct.setEventIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // START_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.startDate = iprot.readString();
              struct.setStartDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // DURATION
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.duration = iprot.readDouble();
              struct.setDurationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CANCELATION
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.cancelation = iprot.readBool();
              struct.setCancelationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // NUMBER_ASSISTANCE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.numberAssistance = iprot.readI32();
              struct.setNumberAssistanceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // NUMBER_TOTAL_RESPONSES
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.numberTotalResponses = iprot.readI32();
              struct.setNumberTotalResponsesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ThriftEventDto struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(EVENT_ID_FIELD_DESC);
      oprot.writeI64(struct.eventId);
      oprot.writeFieldEnd();
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      if (struct.description != null) {
        oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.description);
        oprot.writeFieldEnd();
      }
      if (struct.startDate != null) {
        oprot.writeFieldBegin(START_DATE_FIELD_DESC);
        oprot.writeString(struct.startDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(DURATION_FIELD_DESC);
      oprot.writeDouble(struct.duration);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CANCELATION_FIELD_DESC);
      oprot.writeBool(struct.cancelation);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER_ASSISTANCE_FIELD_DESC);
      oprot.writeI32(struct.numberAssistance);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER_TOTAL_RESPONSES_FIELD_DESC);
      oprot.writeI32(struct.numberTotalResponses);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ThriftEventDtoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ThriftEventDtoTupleScheme getScheme() {
      return new ThriftEventDtoTupleScheme();
    }
  }

  private static class ThriftEventDtoTupleScheme extends org.apache.thrift.scheme.TupleScheme<ThriftEventDto> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ThriftEventDto struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetEventId()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetDescription()) {
        optionals.set(2);
      }
      if (struct.isSetStartDate()) {
        optionals.set(3);
      }
      if (struct.isSetDuration()) {
        optionals.set(4);
      }
      if (struct.isSetCancelation()) {
        optionals.set(5);
      }
      if (struct.isSetNumberAssistance()) {
        optionals.set(6);
      }
      if (struct.isSetNumberTotalResponses()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetEventId()) {
        oprot.writeI64(struct.eventId);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.description);
      }
      if (struct.isSetStartDate()) {
        oprot.writeString(struct.startDate);
      }
      if (struct.isSetDuration()) {
        oprot.writeDouble(struct.duration);
      }
      if (struct.isSetCancelation()) {
        oprot.writeBool(struct.cancelation);
      }
      if (struct.isSetNumberAssistance()) {
        oprot.writeI32(struct.numberAssistance);
      }
      if (struct.isSetNumberTotalResponses()) {
        oprot.writeI32(struct.numberTotalResponses);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ThriftEventDto struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        struct.eventId = iprot.readI64();
        struct.setEventIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
      if (incoming.get(3)) {
        struct.startDate = iprot.readString();
        struct.setStartDateIsSet(true);
      }
      if (incoming.get(4)) {
        struct.duration = iprot.readDouble();
        struct.setDurationIsSet(true);
      }
      if (incoming.get(5)) {
        struct.cancelation = iprot.readBool();
        struct.setCancelationIsSet(true);
      }
      if (incoming.get(6)) {
        struct.numberAssistance = iprot.readI32();
        struct.setNumberAssistanceIsSet(true);
      }
      if (incoming.get(7)) {
        struct.numberTotalResponses = iprot.readI32();
        struct.setNumberTotalResponsesIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

